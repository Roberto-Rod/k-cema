#!/usr/bin/env python3
from devmem import *
from i2c import *

from time import sleep


class Fans:
    I2C_BUS = 0
    CHIP_ADDRESS = 0x2F
    PUSHED_TEMPERATURE = [0x0C, 0x0E]
    # This is the set of configuration data which the EMA application sends: address, data
    FAN_CONFIG = [
        [0x0C, 0x00], [0x0E, 0x00], [0x20, 0x00], [0x28, 0x00], [0x29, 0x0F], [0x2A, 0x00], [0x2B, 0x05], [0x40, 0x00],
        [0x41, 0x01], [0x42, 0x3E], [0x43, 0x7C], [0x45, 0x2A], [0x46, 0x59], [0x47, 0x08], [0x48, 0x20], [0x49, 0xC4],
        [0x4A, 0x00], [0x4B, 0x00], [0x4C, 0x00], [0x4D, 0x00], [0x80, 0x00], [0x81, 0x01], [0x82, 0x3E], [0x83, 0x7C],
        [0x85, 0x2A], [0x86, 0x59], [0x87, 0x08], [0x88, 0x20], [0x89, 0xC4], [0x8A, 0x00], [0x8B, 0x00], [0x8C, 0x00],
        [0x8D, 0x00], [0xE0, 0x00], [0xE2, 0x44], [0x51, 0x46], [0x54, 0x28], [0x56, 0x39], [0x59, 0x2C], [0x5B, 0x30],
        [0x5E, 0x31], [0x60, 0x29], [0x63, 0x35], [0x65, 0x25], [0x68, 0x39], [0x6A, 0x21], [0x6D, 0x3D], [0x6F, 0x1D],
        [0x72, 0x42], [0x74, 0x1B], [0x77, 0x46], [0x79, 0x02], [0x50, 0x2A], [0x91, 0x46], [0x94, 0x28], [0x96, 0x39],
        [0x99, 0x2C], [0x9B, 0x30], [0x9E, 0x31], [0xA0, 0x29], [0xA3, 0x35], [0xA5, 0x25], [0xA8, 0x39], [0xAA, 0x21],
        [0xAD, 0x3D], [0xAF, 0x1D], [0xB2, 0x42], [0xB4, 0x1B], [0xB7, 0x46], [0xB9, 0x02], [0x90, 0x2A], [0x0C, 0x00],
        [0x0E, 0x00], [0x20, 0x00], [0x28, 0x00], [0x29, 0x0F], [0x2A, 0x00], [0x2B, 0x05], [0x40, 0x00], [0x41, 0x01],
        [0x42, 0x3E], [0x43, 0x7C], [0x45, 0x2A], [0x46, 0x59], [0x47, 0x08], [0x48, 0x20], [0x49, 0xC4], [0x4A, 0x00],
        [0x4B, 0x00], [0x4C, 0x00], [0x4D, 0x00], [0x80, 0x00], [0x81, 0x01], [0x82, 0x3E], [0x83, 0x7C], [0x85, 0x2A],
        [0x86, 0x59], [0x87, 0x08], [0x88, 0x20], [0x89, 0xC4], [0x8A, 0x00], [0x8B, 0x00], [0x8C, 0x00], [0x8D, 0x00],
        [0xE0, 0x00], [0xE2, 0x44], [0x51, 0x46], [0x54, 0x28], [0x56, 0x39], [0x59, 0x2C], [0x5B, 0x30], [0x5E, 0x31],
        [0x60, 0x29], [0x63, 0x35], [0x65, 0x25], [0x68, 0x39], [0x6A, 0x21], [0x6D, 0x3D], [0x6F, 0x1D], [0x72, 0x42],
        [0x74, 0x1B], [0x77, 0x46], [0x79, 0x02], [0x50, 0x2A], [0x91, 0x46], [0x94, 0x28], [0x96, 0x39], [0x99, 0x2C],
        [0x9B, 0x30], [0x9E, 0x31], [0xA0, 0x29], [0xA3, 0x35], [0xA5, 0x25], [0xA8, 0x39], [0xAA, 0x21], [0xAD, 0x3D],
        [0xAF, 0x1D], [0xB2, 0x42], [0xB4, 0x1B], [0xB7, 0x46], [0xB9, 0x02], [0x90, 0x2A]
    ]

    def __init__(self):
        self.i2c = I2C(self.I2C_BUS, self.CHIP_ADDRESS)

    def initialise(self):
        for reg in self.FAN_CONFIG:
            self.i2c.write_byte(reg[0], reg[1])

    def set_temperature(self, temp, drive_single_fan=False):
        if self.i2c:
            temp = int(round(temp))
            if temp < -128:
                temp = -128
            if temp > 127:
                temp = 127
            self.i2c.write_byte(self.PUSHED_TEMPERATURE[0], temp)
            if not drive_single_fan:
                self.i2c.write_byte(self.PUSHED_TEMPERATURE[1], temp)


if __name__ == "__main__":
    print("Test fans")
    f = Fans()
    f.initialise()
    print("Set pushed temperature to 100 C, single fan...")
    f.set_temperature(100, drive_single_fan=True)
    sleep(10)
    print("Set pushed temperature to 100 C, both fans...")
    f.set_temperature(100)
    sleep(10)
    print("Set pushed temperature to 0 C...")
    f.set_temperature(0)

